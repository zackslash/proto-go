// Code generated by protoc-gen-go.
// source: ftypes/fortifi.proto
// DO NOT EDIT!

/*
Package fortifi is a generated protocol buffer package.

It is generated from these files:
	ftypes/fortifi.proto

It has these top-level messages:
	Brand
	Department
	GeoLocation
*/
package fortifi

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Direction int32

const (
	Direction_INBOUND        Direction = 0
	Direction_OUTBOUND       Direction = 1
	Direction_BI_DIRECTIONAL Direction = 2
)

var Direction_name = map[int32]string{
	0: "INBOUND",
	1: "OUTBOUND",
	2: "BI_DIRECTIONAL",
}
var Direction_value = map[string]int32{
	"INBOUND":        0,
	"OUTBOUND":       1,
	"BI_DIRECTIONAL": 2,
}

func (x Direction) String() string {
	return proto.EnumName(Direction_name, int32(x))
}
func (Direction) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Brand struct {
	Id            string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	PrimaryDomain string `protobuf:"bytes,3,opt,name=primary_domain,json=primaryDomain" json:"primary_domain,omitempty"`
}

func (m *Brand) Reset()                    { *m = Brand{} }
func (m *Brand) String() string            { return proto.CompactTextString(m) }
func (*Brand) ProtoMessage()               {}
func (*Brand) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Brand) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Brand) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Brand) GetPrimaryDomain() string {
	if m != nil {
		return m.PrimaryDomain
	}
	return ""
}

type Department struct {
	Id   string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (m *Department) Reset()                    { *m = Department{} }
func (m *Department) String() string            { return proto.CompactTextString(m) }
func (*Department) ProtoMessage()               {}
func (*Department) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Department) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Department) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type GeoLocation struct {
	Longitude      float64 `protobuf:"fixed64,1,opt,name=longitude" json:"longitude,omitempty"`
	Latitude       float64 `protobuf:"fixed64,2,opt,name=latitude" json:"latitude,omitempty"`
	Continent      string  `protobuf:"bytes,3,opt,name=continent" json:"continent,omitempty"`
	SovereignState string  `protobuf:"bytes,4,opt,name=sovereign_state,json=sovereignState" json:"sovereign_state,omitempty"`
	Country        string  `protobuf:"bytes,5,opt,name=country" json:"country,omitempty"`
	Region         string  `protobuf:"bytes,6,opt,name=region" json:"region,omitempty"`
	State          string  `protobuf:"bytes,7,opt,name=state" json:"state,omitempty"`
	Borough        string  `protobuf:"bytes,8,opt,name=borough" json:"borough,omitempty"`
	Town           string  `protobuf:"bytes,9,opt,name=town" json:"town,omitempty"`
	Suburb         string  `protobuf:"bytes,10,opt,name=suburb" json:"suburb,omitempty"`
	Postal         string  `protobuf:"bytes,11,opt,name=postal" json:"postal,omitempty"`
}

func (m *GeoLocation) Reset()                    { *m = GeoLocation{} }
func (m *GeoLocation) String() string            { return proto.CompactTextString(m) }
func (*GeoLocation) ProtoMessage()               {}
func (*GeoLocation) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *GeoLocation) GetLongitude() float64 {
	if m != nil {
		return m.Longitude
	}
	return 0
}

func (m *GeoLocation) GetLatitude() float64 {
	if m != nil {
		return m.Latitude
	}
	return 0
}

func (m *GeoLocation) GetContinent() string {
	if m != nil {
		return m.Continent
	}
	return ""
}

func (m *GeoLocation) GetSovereignState() string {
	if m != nil {
		return m.SovereignState
	}
	return ""
}

func (m *GeoLocation) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *GeoLocation) GetRegion() string {
	if m != nil {
		return m.Region
	}
	return ""
}

func (m *GeoLocation) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *GeoLocation) GetBorough() string {
	if m != nil {
		return m.Borough
	}
	return ""
}

func (m *GeoLocation) GetTown() string {
	if m != nil {
		return m.Town
	}
	return ""
}

func (m *GeoLocation) GetSuburb() string {
	if m != nil {
		return m.Suburb
	}
	return ""
}

func (m *GeoLocation) GetPostal() string {
	if m != nil {
		return m.Postal
	}
	return ""
}

func init() {
	proto.RegisterType((*Brand)(nil), "fortifi.ftypes.Brand")
	proto.RegisterType((*Department)(nil), "fortifi.ftypes.Department")
	proto.RegisterType((*GeoLocation)(nil), "fortifi.ftypes.GeoLocation")
	proto.RegisterEnum("fortifi.ftypes.Direction", Direction_name, Direction_value)
}

func init() { proto.RegisterFile("ftypes/fortifi.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 372 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x92, 0x5f, 0xcb, 0xd3, 0x30,
	0x14, 0xc6, 0x6d, 0x7d, 0xf7, 0xa7, 0x67, 0x5a, 0x47, 0x18, 0x12, 0xc4, 0x0b, 0x19, 0x88, 0x32,
	0x74, 0x13, 0xbc, 0xf3, 0xce, 0x5a, 0x91, 0xc2, 0xd8, 0xa0, 0x6e, 0x37, 0xde, 0x8c, 0xb4, 0xcd,
	0xba, 0xc0, 0x9a, 0x53, 0xd2, 0x53, 0x65, 0xdf, 0xcb, 0x0f, 0x28, 0x4d, 0xba, 0x0d, 0xef, 0xde,
	0xbb, 0xfc, 0x7e, 0x4f, 0xf2, 0x10, 0x0e, 0x07, 0x66, 0x47, 0xba, 0xd4, 0xb2, 0x59, 0x1d, 0xd1,
	0x90, 0x3a, 0xaa, 0x65, 0x6d, 0x90, 0x90, 0x85, 0x57, 0x74, 0xe9, 0x3c, 0x85, 0x41, 0x64, 0x84,
	0x2e, 0x58, 0x08, 0xbe, 0x2a, 0xb8, 0xf7, 0xc6, 0x7b, 0x1f, 0xa4, 0xbe, 0x2a, 0x18, 0x83, 0x07,
	0x2d, 0x2a, 0xc9, 0x7d, 0x6b, 0xec, 0x99, 0xbd, 0x85, 0xb0, 0x36, 0xaa, 0x12, 0xe6, 0x72, 0x28,
	0xb0, 0x12, 0x4a, 0xf3, 0xa7, 0x36, 0x7d, 0xde, 0xdb, 0xd8, 0xca, 0xf9, 0x27, 0x80, 0x58, 0xd6,
	0xc2, 0x50, 0x25, 0x35, 0x3d, 0xa6, 0x78, 0xfe, 0xd7, 0x87, 0xc9, 0x0f, 0x89, 0x6b, 0xcc, 0x05,
	0x29, 0xd4, 0xec, 0x35, 0x04, 0x67, 0xd4, 0xa5, 0xa2, 0xb6, 0x90, 0xf6, 0xa9, 0x97, 0xde, 0x05,
	0x7b, 0x05, 0xe3, 0xb3, 0x20, 0x17, 0xfa, 0x36, 0xbc, 0x71, 0xf7, 0x32, 0x47, 0x4d, 0x4a, 0x4b,
	0x4d, 0xfd, 0xef, 0xee, 0x82, 0xbd, 0x83, 0x17, 0x0d, 0xfe, 0x96, 0x46, 0xaa, 0x52, 0x1f, 0x1a,
	0x12, 0x24, 0xf9, 0x83, 0xbd, 0x13, 0xde, 0xf4, 0xcf, 0xce, 0x32, 0x0e, 0xa3, 0x1c, 0x5b, 0x4d,
	0xe6, 0xc2, 0x07, 0xf6, 0xc2, 0x15, 0xd9, 0x4b, 0x18, 0x1a, 0x59, 0x2a, 0xd4, 0x7c, 0x68, 0x83,
	0x9e, 0xd8, 0x0c, 0x06, 0xae, 0x70, 0x64, 0xb5, 0x83, 0xae, 0x27, 0x43, 0x83, 0x6d, 0x79, 0xe2,
	0x63, 0xd7, 0xd3, 0x63, 0x37, 0x06, 0xc2, 0x3f, 0x9a, 0x07, 0x6e, 0x0c, 0xdd, 0xb9, 0xeb, 0x6e,
	0xda, 0xac, 0x35, 0x19, 0x07, 0xd7, 0xed, 0xa8, 0xf3, 0x35, 0x36, 0x24, 0xce, 0x7c, 0xe2, 0xbc,
	0xa3, 0xc5, 0x17, 0x08, 0x62, 0x65, 0x64, 0x6e, 0x67, 0x36, 0x81, 0x51, 0xb2, 0x89, 0xb6, 0xfb,
	0x4d, 0x3c, 0x7d, 0xc2, 0x9e, 0xc1, 0x78, 0xbb, 0xdf, 0x39, 0xf2, 0x18, 0x83, 0x30, 0x4a, 0x0e,
	0x71, 0x92, 0x7e, 0xff, 0xb6, 0x4b, 0xb6, 0x9b, 0xaf, 0xeb, 0xa9, 0x1f, 0x7d, 0xf8, 0xb5, 0x28,
	0x15, 0x9d, 0xda, 0x6c, 0x99, 0x63, 0x75, 0x5d, 0x92, 0x95, 0x5d, 0x92, 0x8f, 0x25, 0xae, 0xfe,
	0x5f, 0x9e, 0x6c, 0x68, 0x83, 0xcf, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0xe4, 0x26, 0xbc, 0xb7,
	0x55, 0x02, 0x00, 0x00,
}
