// Code generated by protoc-gen-go.
// source: ftypes/product.proto
// DO NOT EDIT!

/*
Package product is a generated protocol buffer package.

It is generated from these files:
	ftypes/product.proto

It has these top-level messages:
	Product
	ProductGroup
	ProductFeature
*/
package product

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ProductType int32

const (
	ProductType_PRODUCT ProductType = 0
	ProductType_SERVICE ProductType = 1
)

var ProductType_name = map[int32]string{
	0: "PRODUCT",
	1: "SERVICE",
}
var ProductType_value = map[string]int32{
	"PRODUCT": 0,
	"SERVICE": 1,
}

func (x ProductType) String() string {
	return proto.EnumName(ProductType_name, int32(x))
}
func (ProductType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Product struct {
	Id              string      `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Code            string      `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
	Name            string      `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Group           string      `protobuf:"bytes,4,opt,name=group" json:"group,omitempty"`
	Type            ProductType `protobuf:"varint,5,opt,name=type,enum=fortifi.product.ProductType" json:"type,omitempty"`
	Description     string      `protobuf:"bytes,6,opt,name=description" json:"description,omitempty"`
	ParentProductId string      `protobuf:"bytes,7,opt,name=parent_product_id,json=parentProductId" json:"parent_product_id,omitempty"`
}

func (m *Product) Reset()                    { *m = Product{} }
func (m *Product) String() string            { return proto.CompactTextString(m) }
func (*Product) ProtoMessage()               {}
func (*Product) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type ProductGroup struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
}

func (m *ProductGroup) Reset()                    { *m = ProductGroup{} }
func (m *ProductGroup) String() string            { return proto.CompactTextString(m) }
func (*ProductGroup) ProtoMessage()               {}
func (*ProductGroup) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ProductFeature struct {
	Id          string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Code        string `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
	ProductId   string `protobuf:"bytes,3,opt,name=product_id,json=productId" json:"product_id,omitempty"`
	Name        string `protobuf:"bytes,4,opt,name=name" json:"name,omitempty"`
	Description string `protobuf:"bytes,5,opt,name=description" json:"description,omitempty"`
}

func (m *ProductFeature) Reset()                    { *m = ProductFeature{} }
func (m *ProductFeature) String() string            { return proto.CompactTextString(m) }
func (*ProductFeature) ProtoMessage()               {}
func (*ProductFeature) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func init() {
	proto.RegisterType((*Product)(nil), "fortifi.product.Product")
	proto.RegisterType((*ProductGroup)(nil), "fortifi.product.ProductGroup")
	proto.RegisterType((*ProductFeature)(nil), "fortifi.product.ProductFeature")
	proto.RegisterEnum("fortifi.product.ProductType", ProductType_name, ProductType_value)
}

func init() { proto.RegisterFile("ftypes/product.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 314 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x8c, 0x92, 0xb1, 0x4e, 0xf3, 0x30,
	0x14, 0x85, 0xff, 0xb4, 0x49, 0xab, 0xde, 0xfc, 0x4a, 0x8b, 0xd5, 0xc1, 0x03, 0x48, 0x55, 0x16,
	0x50, 0x04, 0x09, 0x82, 0x37, 0xa0, 0x14, 0xd4, 0x09, 0x14, 0x02, 0x03, 0x4b, 0x95, 0x26, 0x4e,
	0xf0, 0xd0, 0xd8, 0x72, 0x9d, 0x81, 0x47, 0xe0, 0x09, 0x79, 0x1d, 0x1c, 0xc7, 0xa0, 0xd0, 0x82,
	0xc4, 0xe4, 0x73, 0x8f, 0xaf, 0x8e, 0xbf, 0x6b, 0x1b, 0xa6, 0x85, 0x7c, 0xe5, 0x64, 0x1b, 0x71,
	0xc1, 0xf2, 0x3a, 0x93, 0xa1, 0x5a, 0x25, 0x43, 0xe3, 0x82, 0x09, 0x49, 0x0b, 0x1a, 0x1a, 0xdb,
	0x7f, 0xb7, 0x60, 0x78, 0xdf, 0x6a, 0xe4, 0x41, 0x8f, 0xe6, 0xd8, 0x9a, 0x59, 0x27, 0xa3, 0x58,
	0x29, 0x84, 0xc0, 0xce, 0x58, 0x4e, 0x70, 0x4f, 0x3b, 0x5a, 0x37, 0x5e, 0x95, 0x6e, 0x08, 0xee,
	0xb7, 0x5e, 0xa3, 0xd1, 0x14, 0x9c, 0x52, 0xb0, 0x9a, 0x63, 0x5b, 0x9b, 0x6d, 0x81, 0xce, 0xc1,
	0x6e, 0x08, 0xb0, 0xa3, 0x4c, 0xef, 0xe2, 0x30, 0xdc, 0x39, 0x39, 0x34, 0xa7, 0x26, 0xaa, 0x27,
	0xd6, 0x9d, 0x68, 0x06, 0x6e, 0x4e, 0xb6, 0x99, 0xa0, 0x5c, 0x52, 0x56, 0xe1, 0x81, 0x4e, 0xeb,
	0x5a, 0x28, 0x80, 0x03, 0x9e, 0x0a, 0x52, 0xc9, 0x95, 0x49, 0x59, 0x29, 0xe0, 0xa1, 0xee, 0x1b,
	0xb7, 0x1b, 0x26, 0x75, 0x99, 0xfb, 0x09, 0xfc, 0x37, 0xc5, 0xad, 0xe6, 0xf9, 0x61, 0x3a, 0x3d,
	0x49, 0xaf, 0x33, 0xc9, 0x0e, 0x41, 0x7f, 0x8f, 0xc0, 0x7f, 0xb3, 0xc0, 0x33, 0xb1, 0x37, 0x24,
	0x95, 0xb5, 0x20, 0x7f, 0xba, 0xb6, 0x23, 0x80, 0x0e, 0x71, 0x9b, 0x3b, 0xe2, 0x9f, 0xac, 0x5f,
	0x2c, 0xf6, 0xef, 0x2c, 0xce, 0x1e, 0x4b, 0x70, 0x0c, 0x6e, 0xe7, 0x12, 0x91, 0xab, 0x5e, 0x32,
	0xbe, 0xbb, 0x7e, 0x9c, 0x27, 0x93, 0x7f, 0x4d, 0xf1, 0xb0, 0x88, 0x9f, 0x96, 0xf3, 0xc5, 0xc4,
	0xba, 0x3a, 0x7d, 0x0e, 0x4a, 0x2a, 0x5f, 0xea, 0x75, 0x98, 0xb1, 0x4d, 0x64, 0x1e, 0x22, 0xd2,
	0x3f, 0xe2, 0xac, 0x64, 0xd1, 0xf7, 0x9f, 0xb2, 0x1e, 0xe8, 0x8d, 0xcb, 0x8f, 0x00, 0x00, 0x00,
	0xff, 0xff, 0x3b, 0xb2, 0x54, 0xa2, 0x42, 0x02, 0x00, 0x00,
}
