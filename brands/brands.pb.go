// Code generated by protoc-gen-go.
// source: brands.proto
// DO NOT EDIT!

/*
Package brands is a generated protocol buffer package.

It is generated from these files:
	brands.proto

It has these top-level messages:
	CreateRequest
	ListRequest
	BrandsResponse
*/
package brands

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import fcommon "github.com/fortifi/proto-go/fcommon"
import fortifi_ftypes "github.com/fortifi/proto-go/ftypes/fortifi"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CreateRequest struct {
	Id            string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Name          string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	PrimaryDomain string `protobuf:"bytes,3,opt,name=primary_domain,json=primaryDomain" json:"primary_domain,omitempty"`
}

func (m *CreateRequest) Reset()                    { *m = CreateRequest{} }
func (m *CreateRequest) String() string            { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()               {}
func (*CreateRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CreateRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CreateRequest) GetPrimaryDomain() string {
	if m != nil {
		return m.PrimaryDomain
	}
	return ""
}

type ListRequest struct {
}

func (m *ListRequest) Reset()                    { *m = ListRequest{} }
func (m *ListRequest) String() string            { return proto.CompactTextString(m) }
func (*ListRequest) ProtoMessage()               {}
func (*ListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type BrandsResponse struct {
	Brands map[string]*fortifi_ftypes.Brand `protobuf:"bytes,1,rep,name=brands" json:"brands,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
}

func (m *BrandsResponse) Reset()                    { *m = BrandsResponse{} }
func (m *BrandsResponse) String() string            { return proto.CompactTextString(m) }
func (*BrandsResponse) ProtoMessage()               {}
func (*BrandsResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BrandsResponse) GetBrands() map[string]*fortifi_ftypes.Brand {
	if m != nil {
		return m.Brands
	}
	return nil
}

func init() {
	proto.RegisterType((*CreateRequest)(nil), "brands.CreateRequest")
	proto.RegisterType((*ListRequest)(nil), "brands.ListRequest")
	proto.RegisterType((*BrandsResponse)(nil), "brands.BrandsResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Brands service

type BrandsClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*fortifi_ftypes.Brand, error)
	Retrieve(ctx context.Context, in *fcommon.IDRequest, opts ...grpc.CallOption) (*fortifi_ftypes.Brand, error)
	List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*BrandsResponse, error)
	Archive(ctx context.Context, in *fcommon.IDRequest, opts ...grpc.CallOption) (*fcommon.BoolResponse, error)
}

type brandsClient struct {
	cc *grpc.ClientConn
}

func NewBrandsClient(cc *grpc.ClientConn) BrandsClient {
	return &brandsClient{cc}
}

func (c *brandsClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*fortifi_ftypes.Brand, error) {
	out := new(fortifi_ftypes.Brand)
	err := grpc.Invoke(ctx, "/brands.Brands/Create", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brandsClient) Retrieve(ctx context.Context, in *fcommon.IDRequest, opts ...grpc.CallOption) (*fortifi_ftypes.Brand, error) {
	out := new(fortifi_ftypes.Brand)
	err := grpc.Invoke(ctx, "/brands.Brands/Retrieve", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brandsClient) List(ctx context.Context, in *ListRequest, opts ...grpc.CallOption) (*BrandsResponse, error) {
	out := new(BrandsResponse)
	err := grpc.Invoke(ctx, "/brands.Brands/List", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *brandsClient) Archive(ctx context.Context, in *fcommon.IDRequest, opts ...grpc.CallOption) (*fcommon.BoolResponse, error) {
	out := new(fcommon.BoolResponse)
	err := grpc.Invoke(ctx, "/brands.Brands/Archive", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Brands service

type BrandsServer interface {
	Create(context.Context, *CreateRequest) (*fortifi_ftypes.Brand, error)
	Retrieve(context.Context, *fcommon.IDRequest) (*fortifi_ftypes.Brand, error)
	List(context.Context, *ListRequest) (*BrandsResponse, error)
	Archive(context.Context, *fcommon.IDRequest) (*fcommon.BoolResponse, error)
}

func RegisterBrandsServer(s *grpc.Server, srv BrandsServer) {
	s.RegisterService(&_Brands_serviceDesc, srv)
}

func _Brands_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrandsServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/brands.Brands/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrandsServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Brands_Retrieve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(fcommon.IDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrandsServer).Retrieve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/brands.Brands/Retrieve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrandsServer).Retrieve(ctx, req.(*fcommon.IDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Brands_List_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrandsServer).List(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/brands.Brands/List",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrandsServer).List(ctx, req.(*ListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Brands_Archive_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(fcommon.IDRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BrandsServer).Archive(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/brands.Brands/Archive",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BrandsServer).Archive(ctx, req.(*fcommon.IDRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Brands_serviceDesc = grpc.ServiceDesc{
	ServiceName: "brands.Brands",
	HandlerType: (*BrandsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _Brands_Create_Handler,
		},
		{
			MethodName: "Retrieve",
			Handler:    _Brands_Retrieve_Handler,
		},
		{
			MethodName: "List",
			Handler:    _Brands_List_Handler,
		},
		{
			MethodName: "Archive",
			Handler:    _Brands_Archive_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "brands.proto",
}

func init() { proto.RegisterFile("brands.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 342 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x84, 0x92, 0x4f, 0x4b, 0xf3, 0x40,
	0x10, 0xc6, 0x49, 0xda, 0x37, 0xaf, 0x4e, 0x4c, 0x91, 0xd1, 0x4a, 0xc8, 0xa9, 0x04, 0x85, 0x82,
	0x98, 0x42, 0xab, 0x22, 0xbd, 0x59, 0xeb, 0x41, 0xf0, 0x20, 0x39, 0xf6, 0x22, 0x69, 0xb3, 0x69,
	0x17, 0x9b, 0x6c, 0xdc, 0x6c, 0x0a, 0xf9, 0x32, 0x7e, 0x38, 0x3f, 0x89, 0x74, 0xff, 0x40, 0x0b,
	0x15, 0x6f, 0xbb, 0xbf, 0xec, 0x3c, 0xf3, 0xcc, 0x93, 0x81, 0x93, 0x39, 0x4f, 0x8a, 0xb4, 0x8a,
	0x4a, 0xce, 0x04, 0x43, 0x47, 0xdd, 0x02, 0x2f, 0x5b, 0xb0, 0x3c, 0x67, 0x85, 0xc2, 0xc1, 0x79,
	0x26, 0x9a, 0x92, 0x54, 0x83, 0x8c, 0x71, 0x41, 0x33, 0xaa, 0x68, 0x38, 0x03, 0xef, 0x89, 0x93,
	0x44, 0x90, 0x98, 0x7c, 0xd6, 0xa4, 0x12, 0xd8, 0x01, 0x9b, 0xa6, 0xbe, 0xd5, 0xb3, 0xfa, 0xc7,
	0xb1, 0x4d, 0x53, 0x44, 0x68, 0x17, 0x49, 0x4e, 0x7c, 0x5b, 0x12, 0x79, 0xc6, 0x2b, 0xe8, 0x94,
	0x9c, 0xe6, 0x09, 0x6f, 0xde, 0x53, 0x96, 0x27, 0xb4, 0xf0, 0x5b, 0xf2, 0xab, 0xa7, 0xe9, 0x54,
	0xc2, 0xd0, 0x03, 0xf7, 0x95, 0x56, 0x42, 0x2b, 0x87, 0x5f, 0x16, 0x74, 0x26, 0xd2, 0x5a, 0x4c,
	0xaa, 0x92, 0x15, 0x15, 0xc1, 0x31, 0x68, 0xb3, 0xbe, 0xd5, 0x6b, 0xf5, 0xdd, 0x61, 0x18, 0xe9,
	0x49, 0xf6, 0xdf, 0xe9, 0xeb, 0x73, 0x21, 0x78, 0x13, 0x9b, 0xf1, 0xde, 0xc0, 0xdd, 0xc1, 0x78,
	0x0a, 0xad, 0x0f, 0xd2, 0x68, 0xe3, 0xdb, 0x23, 0x5e, 0xc3, 0xbf, 0x4d, 0xb2, 0xae, 0x95, 0x75,
	0x77, 0xd8, 0x8d, 0xcc, 0xe4, 0x2a, 0x08, 0x25, 0x1a, 0xab, 0x37, 0x63, 0xfb, 0xc1, 0x1a, 0x7e,
	0x5b, 0xe0, 0x28, 0x49, 0xbc, 0x07, 0x47, 0xc5, 0x82, 0x5d, 0x63, 0x69, 0x2f, 0xa6, 0xe0, 0xb0,
	0x1a, 0xde, 0xc1, 0x51, 0x4c, 0x04, 0xa7, 0x64, 0x43, 0x10, 0x23, 0xf3, 0x03, 0x5e, 0xa6, 0x7f,
	0x94, 0x8d, 0xa0, 0xbd, 0x4d, 0x0a, 0xcf, 0x4c, 0xb3, 0x9d, 0xdc, 0x82, 0x8b, 0xc3, 0xa1, 0xe0,
	0x2d, 0xfc, 0x7f, 0xe4, 0x8b, 0x15, 0xfd, 0xbd, 0x95, 0x66, 0x13, 0xc6, 0xd6, 0xa6, 0x6a, 0x72,
	0x39, 0x0b, 0x97, 0x54, 0xac, 0xea, 0x79, 0xb4, 0x60, 0xb9, 0x59, 0x86, 0x81, 0x5c, 0x86, 0x9b,
	0x25, 0x1b, 0xa8, 0x56, 0x73, 0x47, 0x82, 0xd1, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xef, 0x63,
	0x32, 0xe4, 0x5a, 0x02, 0x00, 0x00,
}
