// Code generated by protoc-gen-go.
// source: preferences.proto
// DO NOT EDIT!

/*
Package preferences is a generated protocol buffer package.

It is generated from these files:
	preferences.proto

It has these top-level messages:
	Preference
	PreferenceResponse
*/
package preferences

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Preference struct {
	Name  string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (m *Preference) Reset()                    { *m = Preference{} }
func (m *Preference) String() string            { return proto.CompactTextString(m) }
func (*Preference) ProtoMessage()               {}
func (*Preference) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PreferenceResponse struct {
	Name    string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value   string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	Status  int32  `protobuf:"varint,3,opt,name=status" json:"status,omitempty"`
	Message string `protobuf:"bytes,4,opt,name=message" json:"message,omitempty"`
	Version string `protobuf:"bytes,5,opt,name=version" json:"version,omitempty"`
}

func (m *PreferenceResponse) Reset()                    { *m = PreferenceResponse{} }
func (m *PreferenceResponse) String() string            { return proto.CompactTextString(m) }
func (*PreferenceResponse) ProtoMessage()               {}
func (*PreferenceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*Preference)(nil), "preferences.Preference")
	proto.RegisterType((*PreferenceResponse)(nil), "preferences.PreferenceResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Preferences service

type PreferencesClient interface {
	Mutate(ctx context.Context, in *Preference, opts ...grpc.CallOption) (*PreferenceResponse, error)
	Retrieve(ctx context.Context, in *Preference, opts ...grpc.CallOption) (*PreferenceResponse, error)
	Delete(ctx context.Context, in *Preference, opts ...grpc.CallOption) (*PreferenceResponse, error)
}

type preferencesClient struct {
	cc *grpc.ClientConn
}

func NewPreferencesClient(cc *grpc.ClientConn) PreferencesClient {
	return &preferencesClient{cc}
}

func (c *preferencesClient) Mutate(ctx context.Context, in *Preference, opts ...grpc.CallOption) (*PreferenceResponse, error) {
	out := new(PreferenceResponse)
	err := grpc.Invoke(ctx, "/preferences.Preferences/Mutate", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *preferencesClient) Retrieve(ctx context.Context, in *Preference, opts ...grpc.CallOption) (*PreferenceResponse, error) {
	out := new(PreferenceResponse)
	err := grpc.Invoke(ctx, "/preferences.Preferences/Retrieve", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *preferencesClient) Delete(ctx context.Context, in *Preference, opts ...grpc.CallOption) (*PreferenceResponse, error) {
	out := new(PreferenceResponse)
	err := grpc.Invoke(ctx, "/preferences.Preferences/Delete", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Preferences service

type PreferencesServer interface {
	Mutate(context.Context, *Preference) (*PreferenceResponse, error)
	Retrieve(context.Context, *Preference) (*PreferenceResponse, error)
	Delete(context.Context, *Preference) (*PreferenceResponse, error)
}

func RegisterPreferencesServer(s *grpc.Server, srv PreferencesServer) {
	s.RegisterService(&_Preferences_serviceDesc, srv)
}

func _Preferences_Mutate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Preference)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PreferencesServer).Mutate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/preferences.Preferences/Mutate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PreferencesServer).Mutate(ctx, req.(*Preference))
	}
	return interceptor(ctx, in, info, handler)
}

func _Preferences_Retrieve_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Preference)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PreferencesServer).Retrieve(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/preferences.Preferences/Retrieve",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PreferencesServer).Retrieve(ctx, req.(*Preference))
	}
	return interceptor(ctx, in, info, handler)
}

func _Preferences_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Preference)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PreferencesServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/preferences.Preferences/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PreferencesServer).Delete(ctx, req.(*Preference))
	}
	return interceptor(ctx, in, info, handler)
}

var _Preferences_serviceDesc = grpc.ServiceDesc{
	ServiceName: "preferences.Preferences",
	HandlerType: (*PreferencesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Mutate",
			Handler:    _Preferences_Mutate_Handler,
		},
		{
			MethodName: "Retrieve",
			Handler:    _Preferences_Retrieve_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _Preferences_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("preferences.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 239 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xa4, 0x91, 0xb1, 0x4e, 0xc3, 0x30,
	0x10, 0x86, 0x65, 0x68, 0x02, 0x5c, 0x27, 0x4e, 0x08, 0x2c, 0x16, 0x50, 0x17, 0x60, 0x20, 0x91,
	0x40, 0xe2, 0x01, 0xaa, 0xae, 0x48, 0xc8, 0x23, 0x9b, 0x5b, 0x5d, 0x82, 0xa5, 0xc6, 0x8e, 0x7c,
	0x76, 0x1e, 0x82, 0x57, 0xe4, 0x65, 0x08, 0x6e, 0x69, 0xb2, 0x30, 0xa0, 0x6c, 0xfe, 0xfe, 0xff,
	0xee, 0xd7, 0x7f, 0x32, 0x9c, 0xb7, 0x9e, 0x2a, 0xf2, 0x64, 0x37, 0xc4, 0x45, 0xeb, 0x5d, 0x70,
	0x38, 0x1f, 0x49, 0x8b, 0x17, 0x80, 0xb7, 0x03, 0x22, 0xc2, 0xcc, 0xea, 0x86, 0xa4, 0xb8, 0x15,
	0xf7, 0x67, 0x2a, 0xbd, 0xf1, 0x02, 0xb2, 0x4e, 0x6f, 0x23, 0xc9, 0xa3, 0x24, 0xee, 0x60, 0xf1,
	0x29, 0x00, 0x87, 0x45, 0x45, 0xdc, 0x3a, 0xcb, 0xff, 0x08, 0xc0, 0x4b, 0xc8, 0x39, 0xe8, 0x10,
	0x59, 0x1e, 0xf7, 0x72, 0xa6, 0xf6, 0x84, 0x12, 0x4e, 0x1a, 0x62, 0xd6, 0x35, 0xc9, 0x59, 0x9a,
	0xff, 0xc5, 0x1f, 0xa7, 0x23, 0xcf, 0xc6, 0x59, 0x99, 0xed, 0x9c, 0x3d, 0x3e, 0x7d, 0x09, 0x98,
	0x0f, 0x65, 0x18, 0x97, 0x90, 0xbf, 0xc6, 0x3e, 0x8e, 0xf0, 0xaa, 0x18, 0xdf, 0x3f, 0xcc, 0x5c,
	0xdf, 0xfc, 0x61, 0x1c, 0x2e, 0x59, 0xc1, 0xa9, 0xa2, 0xe0, 0x0d, 0x75, 0x53, 0x52, 0xfa, 0x26,
	0x2b, 0xda, 0xd2, 0x94, 0x26, 0xcb, 0x87, 0xf7, 0xbb, 0xda, 0x84, 0x8f, 0xb8, 0x2e, 0x36, 0xae,
	0x29, 0x2b, 0xe7, 0x83, 0xa9, 0x4c, 0x99, 0xfe, 0xf2, 0xb1, 0x76, 0xe5, 0x68, 0x7b, 0x9d, 0x27,
	0xf5, 0xf9, 0x3b, 0x00, 0x00, 0xff, 0xff, 0x75, 0xb5, 0xe7, 0x96, 0xf6, 0x01, 0x00, 0x00,
}
