// Code generated by protoc-gen-go.
// source: sockets.proto
// DO NOT EDIT!

/*
Package sockets is a generated protocol buffer package.

It is generated from these files:
	sockets.proto

It has these top-level messages:
	SocketMessage
	PublishResponse
*/
package sockets

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type SocketMessage struct {
	AppId   string `protobuf:"bytes,1,opt,name=appId" json:"appId,omitempty"`
	Channel string `protobuf:"bytes,2,opt,name=channel" json:"channel,omitempty"`
	Action  string `protobuf:"bytes,3,opt,name=action" json:"action,omitempty"`
	Payload string `protobuf:"bytes,4,opt,name=payload" json:"payload,omitempty"`
}

func (m *SocketMessage) Reset()                    { *m = SocketMessage{} }
func (m *SocketMessage) String() string            { return proto.CompactTextString(m) }
func (*SocketMessage) ProtoMessage()               {}
func (*SocketMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type PublishResponse struct {
	Success bool   `protobuf:"varint,1,opt,name=success" json:"success,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error" json:"error,omitempty"`
}

func (m *PublishResponse) Reset()                    { *m = PublishResponse{} }
func (m *PublishResponse) String() string            { return proto.CompactTextString(m) }
func (*PublishResponse) ProtoMessage()               {}
func (*PublishResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*SocketMessage)(nil), "sockets.SocketMessage")
	proto.RegisterType((*PublishResponse)(nil), "sockets.PublishResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion3

// Client API for Sockets service

type SocketsClient interface {
	Publish(ctx context.Context, in *SocketMessage, opts ...grpc.CallOption) (*PublishResponse, error)
}

type socketsClient struct {
	cc *grpc.ClientConn
}

func NewSocketsClient(cc *grpc.ClientConn) SocketsClient {
	return &socketsClient{cc}
}

func (c *socketsClient) Publish(ctx context.Context, in *SocketMessage, opts ...grpc.CallOption) (*PublishResponse, error) {
	out := new(PublishResponse)
	err := grpc.Invoke(ctx, "/sockets.Sockets/Publish", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Sockets service

type SocketsServer interface {
	Publish(context.Context, *SocketMessage) (*PublishResponse, error)
}

func RegisterSocketsServer(s *grpc.Server, srv SocketsServer) {
	s.RegisterService(&_Sockets_serviceDesc, srv)
}

func _Sockets_Publish_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SocketMessage)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(SocketsServer).Publish(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/sockets.Sockets/Publish",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(SocketsServer).Publish(ctx, req.(*SocketMessage))
	}
	return interceptor(ctx, in, info, handler)
}

var _Sockets_serviceDesc = grpc.ServiceDesc{
	ServiceName: "sockets.Sockets",
	HandlerType: (*SocketsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Publish",
			Handler:    _Sockets_Publish_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: fileDescriptor0,
}

func init() { proto.RegisterFile("sockets.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 198 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2d, 0xce, 0x4f, 0xce,
	0x4e, 0x2d, 0x29, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x87, 0x72, 0x95, 0x0a, 0xb9,
	0x78, 0x83, 0xc1, 0x4c, 0xdf, 0xd4, 0xe2, 0xe2, 0xc4, 0xf4, 0x54, 0x21, 0x11, 0x2e, 0xd6, 0xc4,
	0x82, 0x02, 0xcf, 0x14, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x08, 0x47, 0x48, 0x82, 0x8b,
	0x3d, 0x39, 0x23, 0x31, 0x2f, 0x2f, 0x35, 0x47, 0x82, 0x09, 0x2c, 0x0e, 0xe3, 0x0a, 0x89, 0x71,
	0xb1, 0x25, 0x26, 0x97, 0x64, 0xe6, 0xe7, 0x49, 0x30, 0x83, 0x25, 0xa0, 0x3c, 0x90, 0x8e, 0x82,
	0xc4, 0xca, 0x9c, 0xfc, 0xc4, 0x14, 0x09, 0x16, 0x88, 0x0e, 0x28, 0x57, 0xc9, 0x91, 0x8b, 0x3f,
	0xa0, 0x34, 0x29, 0x27, 0xb3, 0x38, 0x23, 0x28, 0xb5, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x15, 0xa4,
	0xb8, 0xb8, 0x34, 0x39, 0x19, 0xe8, 0x04, 0xb0, 0xb5, 0x1c, 0x41, 0x30, 0x2e, 0xc8, 0x39, 0xa9,
	0x45, 0x45, 0xf9, 0x45, 0x50, 0x6b, 0x21, 0x1c, 0x23, 0x37, 0x2e, 0x76, 0x88, 0xab, 0x8b, 0x85,
	0xac, 0xb9, 0xd8, 0xa1, 0xa6, 0x09, 0x89, 0xe9, 0xc1, 0x3c, 0x89, 0xe2, 0x25, 0x29, 0x09, 0xb8,
	0x38, 0x9a, 0xbd, 0x49, 0x6c, 0xe0, 0xd0, 0x30, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x49, 0xee,
	0x5b, 0xba, 0x1e, 0x01, 0x00, 0x00,
}
